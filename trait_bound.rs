/*
--------------------------------------------------
| Trait Bound
--------------------------------------------------
| - Rust จะไม่ยอมให้ใช้ "อะไรก็ได้" ถ้าไม่รู้ว่าทำอะไรได้บ้าง
| - เราต้อง "จำกัดขอบเขต" ของ Generic Type 
|   ให้ทำงานได้เฉพาะชนิดที่ มีคุณสมบัติบางอย่าง (trait) เท่านั้น
--------------------------------------------------
*/

fn print_debug<T: std::fmt::Debug>(item: T) {
    println!("{:?}", item);
}
// T ต้องเป็นชนิดที่ implement Debug
// ถึงจะใช้ {:?} ใน println! ได้



/*
--------------------------------------------------
| Trait Bound "หลายตัว"
--------------------------------------------------
| - สามารถกำหนดหลาย ๆ constraint ได้โดยใช้ +
--------------------------------------------------
*/

fn clone_and_print<T: Clone + Debug>(item: T) {
    let copy = item.clone();
    println!("{:?}", copy);
}